[{"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\index.js":"1","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\App.js":"2","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\reportWebVitals.js":"3","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Header\\Header.js":"4","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Cards\\Cards.js":"5","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Card\\CardItem.js":"6","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Modal\\Modal.js":"7","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Context.js":"8","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Cart\\Cart.js":"9"},{"size":547,"mtime":1607166215780,"results":"10","hashOfConfig":"11"},{"size":3624,"mtime":1607431086711,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1546,"mtime":1607528112498,"results":"14","hashOfConfig":"11"},{"size":460,"mtime":1607368928659,"results":"15","hashOfConfig":"11"},{"size":2245,"mtime":1607428624242,"results":"16","hashOfConfig":"11"},{"size":880,"mtime":1607427555797,"results":"17","hashOfConfig":"11"},{"size":162,"mtime":1607425350214,"results":"18","hashOfConfig":"11"},{"size":876,"mtime":1607431661838,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"trf08f",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\index.js",[],["41","42"],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\App.js",["43","44"],"import React, {Component , createContext} from 'react';\nimport axios from 'axios';\nimport Header from \"./Components/Header/Header\";\nimport Cards from \"./Components/Cards/Cards\";\nimport ModalOverlay from \"./Components/Modal/Modal\";\nimport Cart from \"./Components/Cart/Cart\";\nimport {Spinner,Button,ButtonGroup} from \"react-bootstrap\";\nimport './App.css';\nimport { Provider } from \"./Context\";\nclass App extends Component {\n  \n  state={\n    data:[],\n    filter:[],\n    modalShow:false,\n    filterChosen:\"All Products\",\n    count:0,\n    selection:{},\n    cart:[],\n    showCart:false\n  }\n  addToCart=(item,spec)=>{\n    this.setState({cart: this.state.cart.concat([{item,spec}])},()=>console.log(this.state.cart));\n     this.modalToggleHandler();\n  }\n  toggleCartShow=()=>{\n    console.log(\"in toggle cart show\");\n    this.setState(prevState=>({showCart:!prevState.showCart}),()=>{\n      console.log(this.state.showCart+\" is the cart state\");\n    });\n  }\n  modalToggleHandler=()=>{\n    console.log(\"in close Handler\");\n      if(this.state.modalShow)\n      {\n        this.setState({selection:{}});\n      }\n    this.setState(prevState=>({modalShow:!prevState.modalShow}));\n  }\n  componentDidMount(){\n    axios.get('https://cdn.shopify.com/s/files/1/0341/4907/3029/files/products.json?v=1607317366'\n    )\n    .then(res=>{\n     this.setState({data:res.data});\n     this.setState({count:res.data.length});\n     this.setState({filter:res.data});\n    })\n  }\n  addToSelection=(selected,option)=>{\n    console.log(\"add to selection\")\n    this.setState({selection:{selected,option}},()=>console.log(this.state.selection));\n   \n  }\n  applyFilter=(filterVal)=>{\n    this.setState({filterChosen:filterVal});\n    if(filterVal==\"All Products\")\n    {\n      this.setState({filter:this.state.data});\n      this.setState({count:this.state.data.length})\n      return;\n    }\n    let filterArray=this.state.data.filter(info=>{\n         return info.name.includes(filterVal) || info.tag.includes(filterVal);\n    })\n    this.setState({count:filterArray.length})\n    console.log(filterArray);\n    this.setState({filter:filterArray});\n  }\n  render(){\n    let app=null;\n     if(this.state.data)\n      {\n      app=(<Cards selected={this.selected} data={this.state.filter}/>);\n      }\n       else{\n      app=(<Spinner animation=\"border\" role=\"status\">\n         <span className=\"sr-only\">Loading...</span>\n        </Spinner>);\n       }\n    return (\n      <div className=\"App\">\n      <Provider  value={{cart:this.state.cart,modalShow:this.state.modalShow,modalToggle:this.modalToggleHandler,addToSelection:this.addToSelection,selection:this.state.selection,addToCart:this.addToCart,toggleCartShow:this.toggleCartShow,showCart:this.state.showCart}}>\n         <Header/>\n         <div className=\"subNav\">\n         <h3>{this.state.filterChosen}({this.state.count})</h3>\n           <div>Filters: \n           <ButtonGroup className=\"mb-2\">\n                  <Button active onClick={()=>this.applyFilter(\"All Products\")}>All Products</Button>\n                  <Button onClick={()=>this.applyFilter(\"T-shirt\")}>Tee Shirt</Button>\n                  <Button onClick={()=>this.applyFilter(\"Denim\")}>Denim</Button>\n                  <Button onClick={()=>this.applyFilter(\"Sweatshirt\")}>Sweatshirts</Button>\n                  <Button onClick={()=>this.applyFilter(\"Polo T-shirt\")}>Polo Tee Shirt</Button>\n                  <Button onClick={()=>this.applyFilter(\"shirt\")}>Shirt</Button>\n          </ButtonGroup>\n          </div>\n         </div>\n         {app}\n         <Cart/>\n         <ModalOverlay/>\n         </Provider>\n      </div>\n    );\n  }\n  \n};\n\nexport default App;\n","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\reportWebVitals.js",[],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Header\\Header.js",[],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Cards\\Cards.js",[],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Card\\CardItem.js",["45","46","47","48"],"import React ,{ useState ,useContext } from 'react';\r\nimport { Card } from \"react-bootstrap\";\r\nimport {shopContext} from \"../../Context\";\r\nimport classes from \"./Card.module.css\";\r\nfunction CardItem(props){\r\n    const contextValue = useContext(shopContext);\r\n    const [selectedOption,setSelectedOption]=useState([]);\r\n    const [option,setOption]=useState('');\r\n    let discount=(props.item.compare_at_price-props.item.price)/props.item.compare_at_price*100;\r\n     discount=Math.round(discount);\r\n   \r\n   function optionSelected(selection,option){\r\n      \r\n    contextValue.modalToggle();\r\n    contextValue.addToSelection(selection,option);\r\n    //shopContext.addToCart(selection,option);\r\n    }\r\n    return (\r\n      \r\n          <div>\r\n            <Card className={classes.Card}>\r\n              <Card.Img\r\n                className={classes.Image}\r\n                variant=\"top\"\r\n                src={props.item.image_src[0]}\r\n              />\r\n              <Card.Body className={classes.cardBody}>\r\n                <Card.Title>{props.item.vendor}</Card.Title>\r\n                <small>{props.item.name}</small>\r\n                <div className={classes.cost}>\r\n                  <Card.Text>${props.item.price}</Card.Text>\r\n                  <strike>\r\n                    <small className={classes.textMuted}>\r\n                      ${props.item.compare_at_price}\r\n                    </small>\r\n                  </strike>\r\n                  <Card.Text className={classes.discount}>\r\n                    ({discount}%OFF)\r\n                  </Card.Text>\r\n                </div>\r\n              </Card.Body>\r\n              <Card.Footer className={classes.footer}>\r\n                {props.item.options.map((option,id) => (\r\n                  <div\r\n                  key={id}\r\n                    className={classes.option}\r\n                    onClick={() => optionSelected(props.item.name,option.value)}\r\n                    // onClick={context.modalToggle}\r\n                 >\r\n                    <Card.Text>\r\n                      <b>{option.value}</b>\r\n                    </Card.Text>\r\n                  </div>\r\n                ))}\r\n              </Card.Footer>\r\n            </Card>\r\n          </div>\r\n        );\r\n}\r\nexport default CardItem;\r\n","C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Modal\\Modal.js",[],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Context.js",[],"C:\\Users\\Surbhi\\Documents\\Projects\\Reactjs\\shoptrade\\src\\Components\\Cart\\Cart.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":28,"nodeType":"55","messageId":"56","endLine":1,"endColumn":41},{"ruleId":"57","severity":1,"message":"58","line":56,"column":17,"nodeType":"59","messageId":"60","endLine":56,"endColumn":19},{"ruleId":"53","severity":1,"message":"61","line":7,"column":12,"nodeType":"55","messageId":"56","endLine":7,"endColumn":26},{"ruleId":"53","severity":1,"message":"62","line":7,"column":27,"nodeType":"55","messageId":"56","endLine":7,"endColumn":44},{"ruleId":"53","severity":1,"message":"63","line":8,"column":12,"nodeType":"55","messageId":"56","endLine":8,"endColumn":18},{"ruleId":"53","severity":1,"message":"64","line":8,"column":19,"nodeType":"55","messageId":"56","endLine":8,"endColumn":28},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'createContext' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'selectedOption' is assigned a value but never used.","'setSelectedOption' is assigned a value but never used.","'option' is assigned a value but never used.","'setOption' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]